{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DataTable_Exam\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"react-data-table-component\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [counList, setCounList] = useState([]);\n  const columns = [{\n    name: \"Flags\",\n    cell: row => {\n      var _row$flags;\n\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: row === null || row === void 0 ? void 0 : (_row$flags = row.flags) === null || _row$flags === void 0 ? void 0 : _row$flags.png,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    },\n    selector: row => row.flags.png,\n    width: '100px',\n    sortable: true\n  }, {\n    name: \"Country Name\",\n    selector: row => row.name,\n    sortable: true\n  }, {\n    name: \"2 character Country Code\",\n    selector: row => row.cca2,\n    sortable: true\n  }, {\n    name: \"3 character Country Code\",\n    selector: row => row.cca3,\n    sortable: true\n  }, {\n    name: \"Native Country Name\",\n    selector: row => row.name.nativeName,\n    sortable: true\n  }, {\n    name: \"Alternative Country Name\",\n    selector: row => row.altSpellings,\n    sortable: true\n  }, {\n    name: \"Country Calling Codes\",\n    selector: row => row.idd,\n    sortable: true\n  }];\n\n  function getCounList() {\n    fetch(\"https://restcountries.com/v3.1/all\").then(res => res.json()).then(counList => {\n      const data = counList.map((value, index) => {\n        return {\n          flage: `${value.flags.png}`,\n          name: `${value.name.official}`,\n          cca2: `${value.cca2}`,\n          cca3: `${value.cca3}`,\n          nativeName: `${value.name.nativeName}`,\n          altSpellings: `${value.altSpellings}`,\n          idd: `${value.idd.root}`\n        };\n      });\n      setCounList(data);\n    });\n  }\n\n  useEffect(() => {\n    getCounList();\n  }, []);\n  useEffect(() => {\n    if (counList.length > 0) {\n      console.log(counList);\n      setLoading(false);\n    }\n  }, [counList]);\n  const paginationComponentOptions = {\n    rowsPerPageText: 'Row Per Pages',\n    rangeSeparatorText: 'of',\n    selectAllRowsItem: true,\n    selectAllRowsItemText: 'Todos'\n  };\n\n  function MyComponent() {\n    return /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: counList,\n      pagination: true,\n      paginationComponentOptions: paginationComponentOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      title: \"Counties List\",\n      striped: true,\n      bordered: true,\n      small: true,\n      columns: columns,\n      data: counList,\n      pagination: true,\n      paginationPerPage: 25,\n      paginationComponentOptions: paginationComponentOptions,\n      paginationRowsPerPageOptions: [25, 50, 100],\n      progressPending: loading,\n      progressComponent: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 24\n      }, this),\n      selectableRows: true,\n      highlightOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Table, \"MLQ/KZa5rh7GLXv6TccicNreKPI=\");\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DataTable_Exam/src/components/Table.js"],"names":["DataTable","useEffect","useState","Table","loading","setLoading","counList","setCounList","columns","name","cell","row","flags","png","selector","width","sortable","cca2","cca3","nativeName","altSpellings","idd","getCounList","fetch","then","res","json","data","map","value","index","flage","official","root","length","console","log","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","MyComponent"],"mappings":"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","sourcesContent":["import DataTable from \"react-data-table-component\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Table() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [counList, setCounList] = useState([]);\r\n\r\n\tconst columns = [\r\n\r\n\t\t{\r\n\t\t\tname: \"Flags\",\r\n\t\t\tcell: row => <img src={row?.flags?.png} width={50} ></img>,\r\n\t\t\tselector: row => row.flags.png,\r\n\t\t\twidth: '100px',\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Country Name\",\r\n\t\t\tselector: row => row.name,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"2 character Country Code\",\r\n\t\t\tselector: row => row.cca2,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"3 character Country Code\",\r\n\t\t\tselector: row => row.cca3,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Native Country Name\",\r\n\t\t\tselector: row => row.name.nativeName,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Alternative Country Name\",\r\n\t\t\tselector: row => row.altSpellings,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Country Calling Codes\",\r\n\t\t\tselector: row => row.idd,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t];\r\n\r\n\tfunction getCounList() {\r\n\t\tfetch(\"https://restcountries.com/v3.1/all\")\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(counList => {\r\n\t\t\t\tconst data = counList.map((value, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tflage: `${value.flags.png}`,\r\n\t\t\t\t\t\tname: `${value.name.official}`,\r\n\t\t\t\t\t\tcca2: `${value.cca2}`,\r\n\t\t\t\t\t\tcca3: `${value.cca3}`,\r\n\t\t\t\t\t\tnativeName: `${value.name.nativeName}`,\r\n\t\t\t\t\t\taltSpellings: `${value.altSpellings}`,\r\n\t\t\t\t\t\tidd: `${value.idd.root}`,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetCounList(data);\r\n\t\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCounList();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (counList.length > 0) {\r\n\t\t\tconsole.log(counList);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [counList]);\r\n\t\r\n\tconst paginationComponentOptions = {\r\n\t\trowsPerPageText: 'Row Per Pages',\r\n\t\trangeSeparatorText: 'of',\r\n\t\tselectAllRowsItem: true,\r\n\t\tselectAllRowsItemText: 'Todos',\r\n\t};\r\n\t\r\n\tfunction MyComponent() {\r\n\t\treturn <DataTable columns={columns} data={counList} pagination paginationComponentOptions={paginationComponentOptions} />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"table\">\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Counties List\"\r\n\t\t\t\tstriped\r\n\t\t\t\tbordered\r\n\t\t\t\tsmall\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={counList}\r\n\t\t\t\tpagination\r\n\t\t\t\tpaginationPerPage = {25}\r\n\t\t\t\tpaginationComponentOptions={paginationComponentOptions}\r\n\t\t\t\tpaginationRowsPerPageOptions={[25, 50, 100]}\r\n\t\t\t\tprogressPending={loading}\r\n\t\t\t\tprogressComponent={<h1>LOADING...</h1>}\r\n\t\t\t\tselectableRows\r\n\t\t\t\thighlightOnHover\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}