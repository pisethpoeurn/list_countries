{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\CountriesList\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"react-data-table-component\";\nimport { useEffect, useState } from \"react\";\nimport Fuse from \"fuse.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [counList, setCounList] = useState([]);\n  const columns = [{\n    name: \"Flags\",\n    cell: row => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: row.flags,\n      width: 50,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this),\n    selector: row => row.flags,\n    width: '100px'\n  }, {\n    name: \"Country Name\",\n    selector: row => row.name,\n    sortable: true\n  }, {\n    name: \"2 Character Country Code\",\n    selector: row => row.cca2\n  }, {\n    name: \"3 Character Country Code\",\n    selector: row => row.cca3\n  }, {\n    name: \"Native Country Name\",\n    selector: row => row.name\n  }, {\n    name: \"Alternative Country Name\",\n    selector: row => row.altSpellings\n  }, {\n    name: \"Country Calling Codes\",\n    selector: row => row.idd\n  }];\n\n  function getCounList() {\n    fetch(\"https://restcountries.com/v3.1/all\").then(res => res.json()).then(counList => {\n      const data = counList.map((value, index) => {\n        return {\n          flags: `${value.flags.png}`,\n          name: `${value.name.official}`,\n          cca2: `${value.cca2}`,\n          cca3: `${value.cca3}`,\n          nativeName: `${value.name.nativeName}`,\n          altSpellings: `${value.altSpellings}`,\n          idd: `${value.idd.root}`\n        };\n      });\n      setCounList(data);\n    });\n  }\n\n  useEffect(() => {\n    getCounList();\n  }, []);\n  useEffect(() => {\n    if (counList.length > 0) {\n      console.log(counList);\n      setLoading(false);\n    }\n  }, [counList]);\n  const fuse = new Fuse(data, {\n    keys: [\"name\"]\n  });\n  const result = fuse.search(data);\n  const finalResult = [];\n  const paginationComponentOptions = {\n    rowsPerPageText: 'Row Per Pages',\n    rangeSeparatorText: 'of',\n    selectAllRowsItem: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \" Countries List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: e => getCounList(e.target.value),\n        placeholder: \"Search Country Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DataTable // title=\"Counties List\"\n    , {\n      finalResult: true,\n      striped: true,\n      columns: columns,\n      data: counList,\n      pagination: true,\n      paginationPerPage: 25,\n      paginationComponentOptions: paginationComponentOptions,\n      paginationRowsPerPageOptions: [25, 50, 100],\n      progressPending: loading,\n      progressComponent: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 24\n      }, this) // selectableRows\n      ,\n      highlightOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Table, \"MLQ/KZa5rh7GLXv6TccicNreKPI=\");\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/CountriesList/src/components/Table.js"],"names":["DataTable","useEffect","useState","Fuse","Table","loading","setLoading","counList","setCounList","columns","name","cell","row","flags","selector","width","sortable","cca2","cca3","altSpellings","idd","getCounList","fetch","then","res","json","data","map","value","index","png","official","nativeName","root","length","console","log","fuse","keys","result","search","finalResult","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","e","target"],"mappings":"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","sourcesContent":["import DataTable from \"react-data-table-component\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nexport default function Table() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [counList, setCounList] = useState([]);\r\n\r\n\tconst columns = [\r\n\r\n\t\t{\r\n\t\t\tname: \"Flags\",\r\n\t\t\tcell: row => <img src={row.flags} width={50} alt=''></img>,\r\n\t\t\tselector: row => row.flags,\r\n\t\t\twidth: '100px',\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Country Name\",\r\n\t\t\tselector: row => row.name,\r\n\t\t\tsortable: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"2 Character Country Code\",\r\n\t\t\tselector: row => row.cca2,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"3 Character Country Code\",\r\n\t\t\tselector: row => row.cca3,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Native Country Name\",\r\n\t\t\tselector: row => row.name,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Alternative Country Name\",\r\n\t\t\tselector: row => row.altSpellings,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Country Calling Codes\",\r\n\t\t\tselector: row => row.idd,\r\n\t\t},\r\n\t];\r\n\r\n\tfunction getCounList() {\r\n\t\tfetch(\"https://restcountries.com/v3.1/all\")\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(counList => {\r\n\t\t\t\tconst data = counList.map((value, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tflags: `${value.flags.png}`,\r\n\t\t\t\t\t\tname: `${value.name.official}`,\r\n\t\t\t\t\t\tcca2: `${value.cca2}`,\r\n\t\t\t\t\t\tcca3: `${value.cca3}`,\r\n\t\t\t\t\t\tnativeName: `${value.name.nativeName}`,\r\n\t\t\t\t\t\taltSpellings: `${value.altSpellings}`,\r\n\t\t\t\t\t\tidd: `${value.idd.root}`,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetCounList(data);\r\n\t\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCounList();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (counList.length > 0) {\r\n\t\t\tconsole.log(counList);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}, [counList]);\r\n\r\n\tconst fuse = new Fuse(data, {\r\n\t\tkeys: [\"name\"]\r\n\t  });\r\n\t  const result = fuse.search(data);\r\n\t  const finalResult = [];\r\n\t\r\n\tconst paginationComponentOptions = {\r\n\t\trowsPerPageText: 'Row Per Pages',\r\n\t\trangeSeparatorText: 'of',\r\n\t\tselectAllRowsItem: true,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"table\">\r\n\t\t\t <p className=\"title\"> Countries List</p>\r\n\t\t\t<div className=\"search-container\">\r\n\t\t\t\t<input\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tonChange={(e) => getCounList(e.target.value)}\r\n\t\t\t\tplaceholder=\"Search Country Name\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<DataTable\r\n\t\t\t\t// title=\"Counties List\"\r\n\t\t\t\tfinalResult\r\n\t\t\t\tstriped\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={counList}\r\n\t\t\t\tpagination\r\n\t\t\t\tpaginationPerPage = {25}\r\n\t\t\t\tpaginationComponentOptions={paginationComponentOptions}\r\n\t\t\t\tpaginationRowsPerPageOptions={[25, 50, 100]}\r\n\t\t\t\tprogressPending={loading}\r\n\t\t\t\tprogressComponent={<h1>LOADING...</h1>}\r\n\t\t\t\t// selectableRows\r\n\t\t\t\thighlightOnHover\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}